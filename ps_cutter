#!/usr/bin/python
# -*- coding: utf-8 -*-
'''
@date: 2011-11-16
@author: shell.xu
'''
import os, sys, time
import traceback
import chardet
from os import path
import segment

def frqfile(cut, filepath):
    print 'process', filepath
    with open(filepath, 'r') as fi: data = fi.read()
    enc = chardet.detect(data[:1200]).get('encoding', 'utf-8')
    if enc is None: enc = 'utf-8'
    data = data.decode(enc, 'ignore')
    return list(cut.parse(data))

def cutfile(filepath):
    cut = segment.get_cutter('frq.db')
    return frqfile(cut, filepath)

def frqtrain(filepath):
    stat = segment.StatCutter(segment.dictdb('frq.db'), None)
    frqfile(segment.StringCutter(stat), filepath)
    stat.train()

def newtrain(filepath):
    db = segment.dictdb('frq.db')
    new = segment.NewCutter()
    cut = segment.StringCutter(segment.DynamicCutter(db, new))
    frqfile(cut, filepath)
    for word, frq in new.get_highfrq():
        print word.encode('utf-8'), frq

def frqtrains(dirpath):
    stat = segment.StatCutter(segment.dictdb('frq.db'), None)
    cut = segment.StringCutter(stat)
    for base, dirs, files in os.walk(dirpath):
        for filename in files:
            try: frqfile(cut, path.join(base, filename))
            except: traceback.print_exc()
    stat.train(True)

def newtrains(dirpath):
    db = segment.dictdb('frq.db')
    new = segment.NewCutter()
    cut = segment.StringCutter(segment.DynamicCutter(db, new))
    for base, dirs, files in os.walk(dirpath):
        for filename in files:
            try: frqfile(cut, path.join(base, filename))
            except: traceback.print_exc()
    for word, frq in new.get_highfrq():
        print word.encode('utf-8'), frq

def frqstat(filepath):
    frq = {}
    with open(filepath, 'r') as fi: data = fi.read().decode('gbk')
    for i in data:
        if i not in frq: frq[i] = 0
        frq[i] += 1
    print sum(frq.values())
    d = sorted([(k, v) for k, v in frq.items() if v > 10],
               key = lambda x: x[1], reverse = True)
    for k, v in d: print k.encode('utf-8'), v

def main():
    if len(sys.argv) == 1:
        cmds = ['cutshow', 'cut', 'frqtrain', 'newtrain',
                'frqtrains', 'newtrains', 'frqstat']
        print '%s [%s]' % (sys.argv[0], '|'.join(cmds))
    elif sys.argv[1] == 'cutshow':
        print '|'.join(cutfile(sys.argv[2])).encode('utf-8')
    elif sys.argv[1] == 'cut': cutfile(sys.argv[2])
    elif sys.argv[1] == 'frqtrain': frqtrain(sys.argv[2])
    elif sys.argv[1] == 'newtrain': newtrain(sys.argv[2])
    elif sys.argv[1] == 'frqtrains': frqtrains(sys.argv[2])
    elif sys.argv[1] == 'newtrains': newtrains(sys.argv[2])
    elif sys.argv[1] == 'frqstat': frqstat(sys.argv[2])

if __name__ == '__main__': main()
